#!/bin/bash

# Deploy script for VDS/VPS with GitHub integration
# Usage: ./deploy.sh

echo "üöÄ Starting deployment..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration - –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–ó–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–ò –î–ê–ù–ù–´–ï!
SERVER_USER="root"
SERVER_HOST="your-server-ip"
SERVER_PATH="/var/www/telegram-catalog"
GIT_REPO="https://github.com/yourusername/telegram-catalog.git"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ "$SERVER_HOST" = "your-server-ip" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω SERVER_HOST –≤ deploy.sh${NC}"
    echo -e "${YELLOW}üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª deploy.sh –∏ —É–∫–∞–∂–∏—Ç–µ IP –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞${NC}"
    exit 1
fi

echo -e "${BLUE}üîß Configuration:${NC}"
echo -e "   Server: $SERVER_USER@$SERVER_HOST"
echo -e "   Path: $SERVER_PATH"
echo -e "   Repo: $GIT_REPO"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
echo -e "${YELLOW}üîç Checking server connection...${NC}"
if ! ssh -o ConnectTimeout=10 $SERVER_USER@$SERVER_HOST "echo 'Connection OK'" 2>/dev/null; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_HOST${NC}"
    echo -e "${YELLOW}üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:${NC}"
    echo -e "   1. IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞"
    echo -e "   2. SSH –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    echo -e "   3. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
echo -e "${YELLOW}üìÅ Creating server directory...${NC}"
ssh $SERVER_USER@$SERVER_HOST "mkdir -p $SERVER_PATH"

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${YELLOW}üì¶ Setting up repository on server...${NC}"
ssh $SERVER_USER@$SERVER_HOST "
    if [ -d '$SERVER_PATH/.git' ]; then
        echo 'Updating existing repository...'
        cd $SERVER_PATH && git pull origin main
    else
        echo 'Cloning repository...'
        cd $(dirname $SERVER_PATH) && git clone $GIT_REPO $(basename $SERVER_PATH)
    fi
"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "${YELLOW}üîß Installing dependencies...${NC}"
ssh $SERVER_USER@$SERVER_HOST "cd $SERVER_PATH && npm install --production"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
echo -e "${YELLOW}üìù Creating logs directory...${NC}"
ssh $SERVER_USER@$SERVER_HOST "mkdir -p $SERVER_PATH/logs"

# –ó–∞–ø—É—Å–∫/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${YELLOW}üîÑ Starting application...${NC}"
ssh $SERVER_USER@$SERVER_HOST "
    cd $SERVER_PATH
    if pm2 list | grep -q telegram-catalog; then
        echo 'Restarting existing application...'
        pm2 restart telegram-catalog
    else
        echo 'Starting new application...'
        pm2 start ecosystem.config.js
        pm2 save
    fi
"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -e "${YELLOW}üìä Checking application status...${NC}"
ssh $SERVER_USER@$SERVER_HOST "pm2 status telegram-catalog"

echo ""
echo -e "${GREEN}‚úÖ Deployment completed successfully!${NC}"
echo -e "${GREEN}üåê Your site is now live at: http://$SERVER_HOST${NC}"
echo -e "${BLUE}üìã Useful commands:${NC}"
echo -e "   View logs: ssh $SERVER_USER@$SERVER_HOST 'pm2 logs telegram-catalog'"
echo -e "   Restart: ssh $SERVER_USER@$SERVER_HOST 'pm2 restart telegram-catalog'"
echo -e "   Status: ssh $SERVER_USER@$SERVER_HOST 'pm2 status'"